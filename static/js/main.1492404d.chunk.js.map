{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","info","title","completed","classes","classNames","TodoList","todos","map","todo","id","username","getUser","userId","usersFromServer","find","App","useState","setTitle","setUserId","todoList","setTodoList","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","trim","newTodo","Math","max","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1492404d.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ninterface Props {\n  user: User\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  info: Todo\n}\n\nexport const TodoInfo: React.FC<Props> = ({ info }) => {\n  const { title, completed, user } = info;\n  const classes = classNames('TodoInfo', { 'TodoInfo--completed': completed });\n\n  return (\n    <article className={classes}>\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[]\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo: Todo) => (<TodoInfo key={todo.id} info={todo} />))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC, useState } from 'react';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [todoList, setTodoList] = useState(todos);\n\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserError(false);\n  };\n\n  const resetform = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleAddTodo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!userId) {\n      setUserError(true);\n    }\n\n    if (!title.trim()) {\n      setTitleError(true);\n    }\n\n    if (userId && title) {\n      const newTodo: Todo = {\n        id: Math.max(...todoList.map(todo => todo.id)) + 1,\n        title,\n        completed: false,\n        userId,\n        user: getUser(userId),\n      };\n\n      setTodoList([...todoList, newTodo]);\n      resetform();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\" onSubmit={handleAddTodo}>\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title </label>\n          <input\n            id=\"titleInput\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            name=\"user\"\n            value={userId || '0'}\n            onChange={handleUserChange}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {userError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todoList} />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}